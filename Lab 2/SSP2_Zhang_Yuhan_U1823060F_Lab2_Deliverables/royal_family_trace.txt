?- trace,succession_list_old(elizabeth,Succession_list).

Call:succession_list_old(elizabeth, _7018)
 Call:'$bags' : findall(_7326, offspring_of(_7326, elizabeth), _7440)
 Exit:'$bags' : findall(_7326, '3c4c155f-f4dc-4f00-8133-8edf17d2481e' : offspring_of(_7326, elizabeth), [charles, andrew, edward, ann])
 Call:succession_order_old([charles, andrew, edward, ann], _7018)
 Call:succession_order_old([andrew, edward, ann], _7496)
 Call:succession_order_old([edward, ann], _7496)
 Call:succession_order_old([ann], _7496)
 Call:succession_order_old([], _7496)
 Exit:succession_order_old([], [])
 Call:insert_old(ann, [], _7498)
 Exit:insert_old(ann, [], [ann])
 Exit:succession_order_old([ann], [ann])
 Call:insert_old(edward, [ann], _7504)
Call:succession_list_old(elizabeth, _7018)
 Call:'$bags' : findall(_7326, offspring_of(_7326, elizabeth), _7440)
 Exit:'$bags' : findall(_7326, '3c4c155f-f4dc-4f00-8133-8edf17d2481e' : offspring_of(_7326, elizabeth), [charles, andrew, edward, ann])
 Call:succession_order_old([charles, andrew, edward, ann], _7018)
 Call:succession_order_old([andrew, edward, ann], _7496)
 Call:succession_order_old([edward, ann], _7496)
 Call:succession_order_old([ann], _7496)
 Call:succession_order_old([], _7496)
 Exit:succession_order_old([], [])
 Call:insert_old(ann, [], _7498)
 Exit:insert_old(ann, [], [ann])
 Exit:succession_order_old([ann], [ann])
 Call:insert_old(edward, [ann], _7504)
 Call:precedes_old(ann, edward)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_old(ann, edward)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_old(ann, edward)
 Call:princess(ann)
 Exit:princess(ann)
 Call:princess(edward)
 Fail:princess(edward)
 Fail:precedes_old(ann, edward)
 Redo:insert_old(edward, [ann], _7508)
 Exit:insert_old(edward, [ann], [edward, ann])
 Exit:succession_order_old([edward, ann], [edward, ann])
 Call:insert_old(andrew, [edward, ann], _7510)
 Call:precedes_old(edward, andrew)
 Call:prince(edward)
 Exit:prince(edward)
 Call:prince(andrew)
 Exit:prince(andrew)
 Call:is_older(edward, andrew)
 Call:older_than(edward, andrew)
 Fail:older_than(edward, andrew)
 Redo:is_older(edward, andrew)
 Call:older_than(edward, _7514)
 Fail:older_than(edward, _7514)
 Fail:is_older(edward, andrew)
 Redo:precedes_old(edward, andrew)
 Call:prince(edward)
 Exit:prince(edward)
 Call:princess(andrew)
 Fail:princess(andrew)
 Redo:precedes_old(edward, andrew)
 Call:princess(edward)
 Fail:princess(edward)
 Fail:precedes_old(edward, andrew)
 Redo:insert_old(andrew, [edward, ann], _7514)
 Exit:insert_old(andrew, [edward, ann], [andrew, edward, ann])
 Exit:succession_order_old([andrew, edward, ann], [andrew, edward, ann])
 Call:insert_old(charles, [andrew, edward, ann], _7018)
 Call:precedes_old(andrew, charles)
 Call:prince(andrew)
 Exit:prince(andrew)
 Call:prince(charles)
 Exit:prince(charles)
 Call:is_older(andrew, charles)
 Call:older_than(andrew, charles)
 Fail:older_than(andrew, charles)
 Redo:is_older(andrew, charles)
 Call:older_than(andrew, _7520)
 Exit:older_than(andrew, edward)
 Call:older_than(_7518, charles)
 Fail:older_than(_7518, charles)
 Fail:is_older(andrew, charles)
 Redo:precedes_old(andrew, charles)
 Call:prince(andrew)
 Exit:prince(andrew)
 Call:princess(charles)
 Fail:princess(charles)
 Redo:precedes_old(andrew, charles)
 Call:princess(andrew)
 Fail:princess(andrew)
 Fail:precedes_old(andrew, charles)
 Redo:insert_old(charles, [andrew, edward, ann], _7018)
 Exit:insert_old(charles, [andrew, edward, ann], [charles, andrew, edward, ann])
 Exit:succession_order_old([charles, andrew, edward, ann], [charles, andrew, edward, ann])
 Exit:succession_list_old(elizabeth, [charles, andrew, edward, ann])



?- trace,succession_list_new(elizabeth,Succession_line).

Call:succession_list_new(elizabeth, _7590)
 Call:'$bags' : findall(_7898, offspring_of(_7898, elizabeth), _8012)
 Exit:'$bags' : findall(_7898, 'be32e6d3-ad04-4fc7-b974-ed5719a3a1c1' : offspring_of(_7898, elizabeth), [charles, andrew, edward, ann])
 Call:succession_order_new([charles, andrew, edward, ann], _7590)
 Call:succession_order_new([andrew, edward, ann], _8068)
 Call:succession_order_new([edward, ann], _8068)
 Call:succession_order_new([ann], _8068)
 Call:succession_order_new([], _8068)
 Exit:succession_order_new([], [])
 Call:insert_new(ann, [], _8070)
 Exit:insert_new(ann, [], [ann])
 Exit:succession_order_new([ann], [ann])
 Call:insert_new(edward, [ann], _8076)
 Call:precedes_new(ann, edward)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_new(ann, edward)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_new(ann, edward)
 Call:princess(ann)
 Exit:princess(ann)
 Call:prince(edward)
 Exit:prince(edward)
 Call:is_older(ann, edward)
 Call:older_than(ann, edward)
 Fail:older_than(ann, edward)
 Redo:is_older(ann, edward)
 Call:older_than(ann, _8080)
 Exit:older_than(ann, andrew)
 Call:older_than(_8078, edward)
 Exit:older_than(andrew, edward)
 Exit:is_older(ann, edward)
 Exit:precedes_new(ann, edward)
 Call:insert_new(edward, [], _7970)
 Exit:insert_new(edward, [], [edward])
 Exit:insert_new(edward, [ann], [ann, edward])
 Exit:succession_order_new([edward, ann], [ann, edward])
 Call:insert_new(andrew, [ann, edward], _8088)
 Call:precedes_new(ann, andrew)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_new(ann, andrew)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_new(ann, andrew)
 Call:princess(ann)
 Exit:princess(ann)
 Call:prince(andrew)
 Exit:prince(andrew)
 Call:is_older(ann, andrew)
 Call:older_than(ann, andrew)
 Exit:older_than(ann, andrew)
 Exit:is_older(ann, andrew)
 Exit:precedes_new(ann, andrew)
 Call:insert_new(andrew, [edward], _7982)
 Call:precedes_new(edward, andrew)
 Call:prince(edward)
 Exit:prince(edward)
 Call:prince(andrew)
 Exit:prince(andrew)
 Call:is_older(edward, andrew)
 Call:older_than(edward, andrew)
 Fail:older_than(edward, andrew)
 Redo:is_older(edward, andrew)
 Call:older_than(edward, _8098)
 Fail:older_than(edward, _8098)
 Fail:is_older(edward, andrew)
 Redo:precedes_new(edward, andrew)
 Call:prince(edward)
 Exit:prince(edward)
 Call:princess(andrew)
 Fail:princess(andrew)
 Redo:precedes_new(edward, andrew)
 Call:princess(edward)
 Fail:princess(edward)
 Redo:precedes_new(edward, andrew)
 Call:princess(edward)
 Fail:princess(edward)
 Fail:precedes_new(edward, andrew)
 Redo:insert_new(andrew, [edward], _7982)
 Exit:insert_new(andrew, [edward], [andrew, edward])
 Exit:insert_new(andrew, [ann, edward], [ann, andrew, edward])
 Exit:succession_order_new([andrew, edward, ann], [ann, andrew, edward])
 Call:insert_new(charles, [ann, andrew, edward], _7590)
 Call:precedes_new(ann, charles)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_new(ann, charles)
 Call:prince(ann)
 Fail:prince(ann)
 Redo:precedes_new(ann, charles)
 Call:princess(ann)
 Exit:princess(ann)
 Call:prince(charles)
 Exit:prince(charles)
 Call:is_older(ann, charles)
 Call:older_than(ann, charles)
 Fail:older_than(ann, charles)
 Redo:is_older(ann, charles)
 Call:older_than(ann, _8104)
 Exit:older_than(ann, andrew)
 Call:...
 Fail:older_than(_8102, charles)
 Fail:is_older(ann, charles)
 Redo:precedes_new(ann, charles)
 Call:princess(ann)
 Exit:princess(ann)
 Call:princess(charles)
 Fail:princess(charles)
 Fail:precedes_new(ann, charles)
 Redo:insert_new(charles, [ann, andrew, edward], _7590)
 Exit:insert_new(charles, [ann, andrew, edward], [charles, ann, andrew, edward])
 Exit:succession_order_new([charles, andrew, edward, ann], [charles, ann, andrew, edward])
 Exit:succession_list_new(elizabeth, [charles, ann, andrew, edward])